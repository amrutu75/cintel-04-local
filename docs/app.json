[{"name": "app.py", "content": "from shiny import App, ui, render, reactive\nfrom shinywidgets import render_widget, output_widget\nimport plotly.express as px\nfrom palmerpenguins import load_penguins\nimport seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Load the data\npenguins_df = load_penguins()\n\n# UI\napp_ui = ui.page_fluid(\n    ui.layout_sidebar(\n        ui.sidebar(\n            ui.h2(\"Penguin Sidebar\"),\n            ui.input_selectize(\n                \"selected_attribute\", \"Select attribute\",\n                [\"bill_length_mm\", \"bill_depth_mm\", \"body_mass_g\"]\n            ),\n            ui.input_numeric(\"plotly_bin_count\", \"Plotly Histogram Bins\", value=50),\n            ui.input_slider(\"seaborn_bin_count\", \"Seaborn Histogram Bins\", 0, 100, 50),\n            ui.input_checkbox_group(\n                \"selected_species_list\", \"Filter Species\",\n                [\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n                selected=[\"Adelie\", \"Gentoo\", \"Chinstrap\"],\n                inline=True\n            )\n        ),\n        ui.layout_columns(\n            ui.output_table(\"data_table\"),\n            ui.output_table(\"data_grid\")\n        ),\n        output_widget(\"plotly_histogram\"),\n        ui.output_plot(\"seaborn_histogram\"),\n        output_widget(\"plotly_scatterplot\"),  \n        ui.hr(),\n        ui.a(\"GitHub\", href=\"https://github.com/amrutu75/cintel-02-pages\", target=\"_blank\")\n    )\n)\n\n# Server\ndef server(input, output, session):\n\n    # Reactive calculation inside server()\n    @reactive.calc\n    def filtered_data():\n        return penguins_df[penguins_df[\"species\"].isin(input.selected_species_list())]\n\n    @output\n    @render.table\n    def data_table():\n        return filtered_data()\n\n    @output\n    @render.table\n    def data_grid():\n        return filtered_data()\n\n    @output\n    @render_widget\n    def plotly_histogram():\n        col = input.selected_attribute()\n        bins = input.plotly_bin_count()\n        fig = px.histogram(\n            filtered_data(),\n            x=col,\n            nbins=int(bins),\n            color=\"species\",\n            title=f\"Plotly Histogram of {col}\"\n        )\n        return fig\n\n    @output\n    @render.plot\n    def seaborn_histogram():\n        col = input.selected_attribute()\n        bins = input.seaborn_bin_count()\n        fig, ax = plt.subplots()\n        sns.histplot(\n            data=filtered_data(),\n            x=col,\n            bins=int(bins),\n            hue=\"species\",\n            ax=ax\n        )\n        ax.set_title(f\"Seaborn Histogram of {col}\")\n        return fig\n\n    @output\n    @render_widget\n    def plotly_scatterplot():\n        fig = px.scatter(\n            filtered_data(),\n            x=\"bill_depth_mm\",\n            y=\"bill_length_mm\",\n            color=\"species\",\n            symbol=\"species\",\n            labels={\n                \"bill_depth_mm\": \"Bill Depth (mm)\",\n                \"bill_length_mm\": \"Bill Length (mm)\"\n            },\n            title=\"Bill Depth vs. Bill Length by Penguin Species\"\n        )\n        return fig\n#Data Table and Data Grid\nwith ui.layout_columns():\n    with ui.card(full_screen=True):\n        ui.h2(\"Penguin Data Table\")\n        @render.data_frame\n        def penguins_datatable():\n            return render.DataTable(filtered_data())\n\n    with ui.card(full_screen=True):\n        ui.h2(\"Penguin Data Grid\")\n        @render.data_frame\n        def penguins_datagrid():\n            return render.DataGrid(filtered_data())\n# App\napp = App(app_ui, server)\n", "type": "text"}]